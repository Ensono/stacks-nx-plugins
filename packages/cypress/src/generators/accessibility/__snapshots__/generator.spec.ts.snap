// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`cypress accessibility generator should correctly add accessibility should update the applications cypress.config.ts 1`] = `
"import { nxE2EPreset } from '@nx/cypress/plugins/cypress-preset';

import { defineConfig } from 'cypress';

const appName = process.env.NX_TASK_TARGET_PROJECT as string;
const outputFolderForProject = process.env.CI
  ? \`../../test-results/\${appName}\`
  : 'test-results';

export default defineConfig({
  e2e: {
    ...nxE2EPreset(__filename, { cypressDir: 'src' }),
    setupNodeEvents(on, config) {
      on('task', {
        log(message) {
          console.log(message);
          return null;
        },
        table(message) {
          console.table(message);
          return null;
        },
      });
    },
  },
  reporter: '../../node_modules/cypress-multi-reporters',
  reporterOptions: {
    reporterEnabled: !process.env.CI
      ? 'spec'
      : 'spec, mocha-junit-reporter, mochawesome',
    mochaJunitReporterReporterOptions: {
      mochaFile: outputFolderForProject.concat(
        \`/downloads/junit-report/results-\${appName}-[hash].xml\`
      ),
    },
    mochawesomeReporterOptions: {
      charts: true,
      overwrite: false,
      html: false,
      json: true,
      reportDir: outputFolderForProject.concat('/downloads/reports-json-file'),
      reportFilename: '[name].html',
      embeddedScreenshots: true,
      inlineAssets: true,
    },
  },
});
"
`;

exports[`cypress accessibility generator should correctly update the setUpNodeEvents if it already exists 1`] = `
"export default defineConfig({
  ...baseConfig,
  e2e: {
    setupNodeEvents(on, config) {
      on('before:browser:launch', (file) => {
        //do something
      });

      on('task', {
        log(message) {
          console.log(message);
          return null;
        },
        table(message) {
          console.table(message);
          return null;
        },
      });
    },
  },
});
"
`;
