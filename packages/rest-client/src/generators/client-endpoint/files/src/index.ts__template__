import httpClient, { RequestConfig, Response } from '<%= httpClient %>';

import { <%= endpointName %>, <%= endpointName %>Data } from './index.types';

const API_ENDPOINT = `${process.env.<%= envVar %>}/<%= endpointName %>/v<%= endpointVersion %>`;
<% if (methods.includes('get')) { %>

export const get<%= endpointName %> = async (config: RequestConfig) => 
    httpClient.get<<%= endpointName %>>(API_ENDPOINT, config)
<% } %>
<% if (methods.includes('delete')) { %>

export const delete<%= endpointName %> = async (config: RequestConfig) => 
    httpClient.delete<<%= endpointName %>>(API_ENDPOINT, config)
<% } %>
<% if (methods.includes('head')) { %>

export const head<%= endpointName %> = async (config: RequestConfig) => 
    httpClient.head<<%= endpointName %>>(API_ENDPOINT, config)
<% } %>
<% if (methods.includes('options')) { %>

export const options<%= endpointName %> = async (config: RequestConfig) => 
    httpClient.options<<%= endpointName %>>(API_ENDPOINT, config)
<% } %>
<% if (methods.includes('post')) { %>

export const post<%= endpointName %> = async (
    data: <%= endpointName %>Data,
    config: RequestConfig
) => 
    httpClient.post<<%= endpointName %>, Response<<%= endpointName %>>, <%= endpointName %>Data>(
        API_ENDPOINT,
        data,
        config
    );
<% } %>
<% if (methods.includes('put')) { %>

export const put<%= endpointName %> = async (
    data: <%= endpointName %>Data,
    config: RequestConfig
) => 
    httpClient.put<<%= endpointName %>, Response<<%= endpointName %>>, <%= endpointName %>Data>(
        API_ENDPOINT,
        data,
        config
    );
<% } %>
<% if (methods.includes('patch')) { %>

export const patch<%= endpointName %> = async (
    data: Partial<<%= endpointName %>Data>,
    config: RequestConfig
) => 
    httpClient.patch<<%= endpointName %>, Response<<%= endpointName %>>, <%= endpointName %>Data>(
        API_ENDPOINT,
        data,
        config
    );
<% } %>
