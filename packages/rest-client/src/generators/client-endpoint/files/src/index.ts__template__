import httpClient from '<%= httpClient %>';
import { AxiosRequestConfig, AxiosResponse } from 'axios';

import { <%= className %>, <%= className %>Data } from './index.types';

const API_ENDPOINT = `${process.env.<%= envVar %>}/<%= endpointName %>/v<%= endpointVersion %>`;

<% if (methods.includes('get')) { %>
export const get<%= fnSuffix %> = async (config: AxiosRequestConfig) => 
    httpClient.get<<%= className %>>(API_ENDPOINT, config)
<% } %>

<% if (methods.includes('delete')) { %>
export const delete<%= fnSuffix %> = async (config: AxiosRequestConfig) => 
    httpClient.delete<<%= className %>>(API_ENDPOINT, config)
<% } %>

<% if (methods.includes('head')) { %>
export const head<%= fnSuffix %> = async (config: AxiosRequestConfig) => 
    httpClient.head<<%= className %>>(API_ENDPOINT, config)
<% } %>

<% if (methods.includes('options')) { %>
export const options<%= fnSuffix %> = async (config: AxiosRequestConfig) => 
    httpClient.options<<%= className %>>(API_ENDPOINT, config)
<% } %>

<% if (methods.includes('post')) { %>
export const post<%= fnSuffix %> = async (
    data: <%= className %>Data,
    config: AxiosRequestConfig
) => 
    httpClient.post<<%= className %>, AxiosResponse<<%= className %>>, <%= className %>Data>(
        API_ENDPOINT,
        data,
        config
    );
<% } %>

<% if (methods.includes('put')) { %>
export const put<%= fnSuffix %> = async (
    data: <%= className %>Data,
    config: AxiosRequestConfig
) => 
    httpClient.put<<%= className %>, AxiosResponse<<%= className %>>, <%= className %>Data>(
        API_ENDPOINT,
        data,
        config
    );
<% } %>

<% if (methods.includes('patch')) { %>
export const patch<%= fnSuffix %> = async (
    data: Partial<<%= className %>Data>,
    config: AxiosRequestConfig
) => 
    httpClient.patch<<%= className %>, AxiosResponse<<%= className %>>, <%= className %>Data>(
        API_ENDPOINT,
        data,
        config
    );
<% } %>
