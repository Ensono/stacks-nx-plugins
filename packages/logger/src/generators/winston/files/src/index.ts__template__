<% if(typeof streamPath != 'undefined') { %>import fs from "fs";<% } %>
import * as winston from 'winston';

const logConfiguration: winston.LoggerOptions = {
    level: 'debug',
    <% if(logLevelType === 'syslog') { %>levels: winston.config.syslog.levels,<% } -%>
    <% if(logLevelType === 'cli') { %>levels: winston.config.cli.levels,<% } -%>
    <% if(logLevelType === 'npm') { %>levels: winston.config.npm.levels,<% } -%>
};

if(process.env.NODE_ENV === 'production') {
    logConfiguration.level = 'info';
}

// Reusable winston logging instance
const logger = winston.createLogger(logConfiguration);
<% if(consoleLogs) { %>
logger.add(new winston.transports.Console());
<% } %>
<% if(typeof fileTransportPath != 'undefined') { %>
logger.add(new winston.transports.File({filename: "<%= fileTransportPath %>"}))
<% } %>
<% if(typeof httpTransportHost != 'undefined' || typeof httpTransportPort != 'undefined' || typeof httpTransportPath != 'undefined' || httpTransportSSL) { %>
const httpTransportConfiguration: winston.transports.HttpTransportOptions = {
<% if(typeof httpTransportHost != 'undefined') {%>host: '<%= httpTransportHost%>',<% } -%>
<% if(typeof httpTransportPort != 'undefined') {%>port: <%= httpTransportPort%>,<% } -%>
<% if(typeof httpTransportPath != 'undefined') {%>path: '<%= httpTransportPath%>',<% } -%>
<% if(httpTransportSSL) {%>ssl: <%= httpTransportSSL%>,<% } -%>
};
logger.add(new winston.transports.Http(httpTransportConfiguration));
<% } %>
<% if(typeof streamPath != 'undefined') { %>
const streamTransportConfiguration: winston.transports.StreamTransportOptions = {
    stream: fs.createWriteStream('<%= streamPath %>')
};
logger.add(new winston.transports.Stream(streamTransportConfiguration));
<% } %>

export default logger;
