parameters:
    - name: azureSubscription
      type: string
      default: '%REPLACE%'
    - name: containerRegistry
      type: string
      default: <%= nonprodRegistry %>
    - name: aksResourceGroup
      type: string
      default: <%= nonprodAKSResource %>
    - name: aksName
      type: string
      default: <%= nonprodAKSResource %>
    - name: environment
      type: string
      default: nonprod

# Configure the stages
stages:
    - stage: Build_${{ parameters.environment }}
      jobs:
          - job: Build
            steps:
                # Install Taskctl for the build to run
                - checkout: 'self'
                  fetchDepth: '0'
                  fetchTags: true
                  persistCredentials: 'true'
                - task: Bash@3
                  displayName: Install Taskctl
                  inputs:
                      targetType: inline
                      script: |
                          wget https://github.com/taskctl/taskctl/releases/download/$(TaskctlVersion)/taskctl_$(TaskctlVersion)_linux_amd64.tar.gz -O /tmp/taskctl.tar.gz
                          tar zxf /tmp/taskctl.tar.gz -C /usr/local/bin taskctl
                # Install the stacks envfile
                - task: Bash@3
                  displayName: Install Envfile
                  inputs:
                      targetType: inline
                      script: |
                          wget https://github.com/amido/stacks-envfile/releases/download/v$(StacksEnvfileVersion)/stacks-envfile-linux-amd64-$(StacksEnvfileVersion) -O /usr/local/bin/envfile
                          chmod +x /usr/local/bin/envfile
                - script: |
                      npm ci
                      git config --global user.email "pipelines@<%= externalDomain %>"
                      git config --global user.name "<%= companyName %> Pipelines"
                - task: AzureCLI@2
                  displayName: build_deployment_${{ parameters.environment }}
                  <% if (vcsType === 'github') { %>env:
                      GH_TOKEN: $(GH_TOKEN)<% } %>
                  inputs:
                      azureSubscription: ${{ parameters.azureSubscription }}
                      scriptLocation: inlineScript
                      scriptType: bash
                      addSpnToEnvironment: true
                      inlineScript: |
                          echo $servicePrincipalKey | docker login ${{ parameters.containerRegistry }} -u $servicePrincipalId --password-stdin
                          echo $servicePrincipalKey | helm registry login ${{ parameters.containerRegistry }} --username $servicePrincipalId --password-stdin
                          az aks get-credentials --admin -n ${{ parameters.aksName }} -g ${{ parameters.aksResourceGroup }}
                          export ARM_CLIENT_ID=$servicePrincipalId
                          export ARM_CLIENT_SECRET=$servicePrincipalKey
                          export ARM_TENANT_ID=$tenantId
                          export ARM_SUBSCRIPTION_ID=$(az account show --query id -o tsv)
                          taskctl ${{ parameters.environment }}
