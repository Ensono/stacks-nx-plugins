// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`playwright generator should run successfully with default options: .prettierrc 1`] = `
"{ "singleQuote": true }
"
`;

exports[`playwright generator should run successfully with default options: apps/test-e2e/playwright.config.ts 1`] = `
"import { defineConfig, devices } from '@playwright/test';
import { nxE2EPreset } from '@nx/playwright/preset';

import { workspaceRoot } from '@nx/devkit';

// For CI, you may want to set BASE_URL to the deployed application.
const baseURL = process.env['BASE_URL'] || 'http://127.0.0.1:3000';

/**
 * Read environment variables from file.
 * https://github.com/motdotla/dotenv
 */
// require('dotenv').config();

/**
 * See https://playwright.dev/docs/test-configuration.
 */
export default defineConfig({
  ...nxE2EPreset(__filename, { testDir: './src' }),
  /* Shared settings for all the projects below. See https://playwright.dev/docs/api/class-testoptions. */
  use: {
    baseURL,
    /* Collect trace when retrying the failed test. See https://playwright.dev/docs/trace-viewer */
    trace: 'on-first-retry',
  },
  /* Run your local dev server before starting the tests */
  webServer: {
    command: 'npx nx start test',
    url: 'http://127.0.0.1:3000',
    reuseExistingServer: !process.env.CI,
    cwd: workspaceRoot,
  },
  projects: [
    {
      name: 'chromium',
      use: { ...devices['Desktop Chrome'] },
    },

    {
      name: 'firefox',
      use: { ...devices['Desktop Firefox'] },
    },

    {
      name: 'webkit',
      use: { ...devices['Desktop Safari'] },
    },

    // Uncomment for mobile browsers support
    /* {
      name: 'Mobile Chrome',
      use: { ...devices['Pixel 5'] },
    },
    {
      name: 'Mobile Safari',
      use: { ...devices['iPhone 12'] },
    }, */

    // Uncomment for branded browsers
    /* {
      name: 'Microsoft Edge',
      use: { ...devices['Desktop Edge'], channel: 'msedge' },
    },
    {
      name: 'Google Chrome',
      use: { ...devices['Desktop Chrome'], channel: 'chrome' },
    } */
  ],
});
"
`;

exports[`playwright generator should run successfully with default options: apps/test-e2e/src/example.spec.ts 1`] = `
"import { test, expect } from '@playwright/test';

test('has title', async ({ page }) => {
  await page.goto('/');

  // Expect h1 to contain a substring.
  expect(await page.locator('h1').innerText()).toContain('Welcome');
});
"
`;

exports[`playwright generator should run successfully with default options: nx.json 1`] = `
"{
  "affected": {
    "defaultBase": "main"
  },
  "targetDefaults": {
    "build": {
      "cache": true
    },
    "lint": {
      "cache": true
    },
    "@nx/js:tsc": {
      "cache": true,
      "dependsOn": ["^build"],
      "inputs": ["default", "^default"]
    },
    "@nx/eslint:lint": {
      "cache": true,
      "inputs": [
        "default",
        "{workspaceRoot}/.eslintrc.json",
        "{workspaceRoot}/.eslintignore",
        "{workspaceRoot}/eslint.config.js"
      ]
    },
    "@nx/jest:jest": {
      "cache": true,
      "inputs": ["default", "^default", "{workspaceRoot}/jest.preset.js"],
      "options": {
        "passWithNoTests": true
      },
      "configurations": {
        "ci": {
          "ci": true,
          "codeCoverage": true
        }
      }
    }
  },
  "stacks": {
    "config": {
      "business": {
        "company": "Amido",
        "domain": "stacks",
        "component": "nx"
      },
      "domain": {
        "internal": "test.com",
        "external": "test.dev"
      },
      "cloud": {
        "region": "euw",
        "platform": "azure"
      },
      "pipeline": "azdo",
      "terraform": {
        "group": "terraform-group",
        "storage": "terraform-storage",
        "container": "terraform-container"
      },
      "vcs": {
        "type": "github",
        "url": "remote.git"
      }
    },
    "executedGenerators": {
      "project": {
        "test": ["PlaywrightInit"]
      },
      "workspace": []
    }
  }
}
"
`;

exports[`playwright generator should run successfully with default options: package.json 1`] = `
"{
  "name": "@proj/source",
  "dependencies": {
    "tslib": "^2.3.0"
  },
  "devDependencies": {
    "@nx/devkit": "18.3.4",
    "@nx/eslint": "18.3.4",
    "@nx/eslint-plugin": "18.3.4",
    "@nx/jest": "18.3.4",
    "@nx/js": "18.3.4",
    "@nx/playwright": "18.3.4",
    "@playwright/test": "^1.44.0",
    "@swc-node/register": "~1.8.0",
    "@swc/core": "~1.3.85",
    "@swc/helpers": "~0.5.2",
    "@types/jest": "^29.4.0",
    "@types/node": "18.16.9",
    "@typescript-eslint/eslint-plugin": "^7.3.0",
    "@typescript-eslint/parser": "^7.3.0",
    "eslint": "~8.57.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-playwright": "^0.15.3",
    "jest": "^29.4.1",
    "jest-environment-jsdom": "^29.4.1",
    "playwright": "^1.44.0",
    "prettier": "^2.6.2",
    "ts-jest": "^29.1.0",
    "ts-node": "10.9.1",
    "typescript": "~5.4.2"
  }
}
"
`;

exports[`playwright generator should run successfully with default options: tsconfig.base.json 1`] = `
"{
  "compilerOptions": {
    "paths": {
      "@proj/test-e2e": ["apps/test-e2e/src/index.ts"]
    }
  }
}
"
`;
